import tensorflow as tf
from tensorflow.keras.layers import Input, Dense, LSTM, Embedding, Dropout
from tensorflow.keras.models import Model

# Define vocabulary size and maximum length
vocab_size = 5000  # Example value, replace with actual size
max_length = 34  # Example value, replace with actual length

def build_model(vocab_size, max_length):
    # Feature extractor model
    inputs1 = Input(shape=(7, 7, 2048))
    fe1 = tf.keras.layers.GlobalAveragePooling2D()(inputs1)
    fe2 = Dense(256, activation='relu')(fe1)
    
    # Sequence model
    inputs2 = Input(shape=(max_length,))
    se1 = Embedding(vocab_size, 256, mask_zero=True)(inputs2)
    se2 = Dropout(0.5)(se1)
    se3 = LSTM(256)(se2)
    
    # Decoder model
    decoder1 = tf.keras.layers.add([fe2, se3])
    decoder2 = Dense(256, activation='relu')(decoder1)
    outputs = Dense(vocab_size, activation='softmax')(decoder2)
    
    model = Model(inputs=[inputs1, inputs2], outputs=outputs)
    model.compile(loss='categorical_crossentropy', optimizer='adam')
    
    return model

model = build_model(vocab_size, max_length)
model.summary()
